name: 🌐 App Service Austentel Deploy
on: 
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: 🌐 App Service Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🔐 Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
    
    - name: 🌐 App Service Deploy (No Provider Registration Needed)
      run: |
        set -e
        
        # Configuration
        RESOURCE_GROUP="${RESOURCE_GROUP}"
        REGISTRY_NAME="${REGISTRY_NAME}"
        REGISTRY_LOGIN_SERVER="${REGISTRY_LOGIN_SERVER}"
        WEB_APP_NAME="${WEB_APP_NAME}"
        
        # Retry function
        retry_with_backoff() {
            local operation=$1
            local command=$2
            local max_attempts=${3:-5}
            
            for attempt in $(seq 1 $max_attempts); do
                echo "🔄 Attempting $operation (try $attempt/$max_attempts)"
                
                if eval "$command"; then
                    echo "✅ $operation succeeded"
                    return 0
                else
                    if [ $attempt -eq $max_attempts ]; then
                        echo "❌ $operation failed after $max_attempts attempts"
                        return 1
                    fi
                    sleep $((10 * attempt))
                fi
            done
        }
        
        echo "🌐 App Service deployment - no provider registration needed!"
        
        echo "🔍 Checking existing web app..."
        if az webapp show --name "$WEB_APP_NAME" --resource-group "$RESOURCE_GROUP" >/dev/null 2>&1; then
            echo "✅ Web app exists: $WEB_APP_NAME"
        else
            echo "❌ Web app not found: $WEB_APP_NAME"
            exit 1
        fi
        
        # FIXED: ACR login with proper registry name variable
        echo "🔐 Logging into Container Registry..."
        retry_with_backoff "Registry login" "az acr login --name '$REGISTRY_NAME'"
        
        echo "🏗️ Building container image..."
        retry_with_backoff "Image build" \
            "docker build -t $REGISTRY_LOGIN_SERVER/austentel:latest ."
        
        echo "📤 Pushing to registry..."
        retry_with_backoff "Image push" \
            "docker push $REGISTRY_LOGIN_SERVER/austentel:latest"
        
        echo "🌐 Configuring App Service container..."
        retry_with_backoff "App Service container config" \
            "az webapp config container set \
              --name '$WEB_APP_NAME' \
              --resource-group '$RESOURCE_GROUP' \
              --docker-custom-image-name '$REGISTRY_LOGIN_SERVER/austentel:latest' \
              --docker-registry-server-url 'https://$REGISTRY_LOGIN_SERVER' \
              --docker-registry-server-user '${{ secrets.REGISTRY_USERNAME }}' \
              --docker-registry-server-password '${{ secrets.REGISTRY_PASSWORD }}'"
        
        echo "🔄 Restarting App Service..."
        retry_with_backoff "App Service restart" \
            "az webapp restart --name '$WEB_APP_NAME' --resource-group '$RESOURCE_GROUP'"
        
        # Wait for deployment
        echo "⏳ Waiting for App Service to start..."
        sleep 60
        
        # Get URL and test
        WEB_APP_URL=$(az webapp show --name "$WEB_APP_NAME" --resource-group "$RESOURCE_GROUP" --query defaultHostName --output tsv)
        echo "📍 App Service URL: https://$WEB_APP_URL"
        
        # Health check
        echo "🧪 Testing App Service health..."
        for i in {1..10}; do
            if curl -f --max-time 30 "https://$WEB_APP_URL/health" >/dev/null 2>&1; then
                echo "✅ Health check passed!"
                break
            elif curl -f --max-time 30 "https://$WEB_APP_URL/" >/dev/null 2>&1; then
                echo "✅ App Service responding!"
                break
            else
                echo "⏳ Health check attempt $i/10..."
                sleep 30
            fi
        done
        
        echo "🎉 APP SERVICE DEPLOYMENT COMPLETE!"
        echo "🌐 Access your app at: https://$WEB_APP_URL"
